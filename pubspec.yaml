name: educacao_criativa
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: "none" # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ">=3.4.3 <4.0.0"

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  flutter_localizations:
    sdk: flutter
  intl: ^0.19.0
  async:
  html: ^0.15.4

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.6
  http: ^1.1.0
  get_it: ^7.6.4
  go_router: ^14.2.3
  firebase_core: ^2.31.0
  firebase_auth: ^4.19.5
  firebase_storage: ^11.7.5
  cloud_firestore: ^4.17.3
  flutter_polyline_points: ^2.0.0
  google_maps_flutter: ^2.5.3
  google_maps_flutter_web: ^0.5.4+3
  pointer_interceptor: ^0.9.3+7
  auto_size_text: ^3.0.0
  brasil_fields: ^1.14.0
  file_picker: ^8.0.3
  flutter_dropzone: ^3.0.7
  timelines: ^0.1.0
  url_launcher: ^6.1.9
  time_picker_sheet: ^0.0.2+1
  flutter_staggered_grid_view: ^0.6.2
  collection: ^1.17.1
  pdf: ^3.10.8
  printing: ^5.12.0
  path_provider: ^2.0.13
  bloc: ^8.1.2
  flutter_bloc: ^8.1.3
  side_sheet: ^1.0.4
  loading_animation_widget: ^1.2.0+4
  data_table_2: ^2.5.0
  extended_tabs: ^4.1.0
  fl_chart: ^0.62.0
  mrx_charts: ^0.1.3
  google_fonts: ^6.1.0
  isolate_manager: ^4.1.5+1
  hive: ^2.2.3
  hive_flutter: ^1.1.0
  statsfl: ^2.2.0+1
  shared_preferences: ^2.2.2
  webview_flutter: ^4.7.0
  webview_flutter_web: ^0.2.2+4
  infinite_widgets: ^2.0.2
  excel: ^4.0.2
  sliver_tools: ^0.2.12
  flutter_sticky_header: ^0.6.5
  isar: ^3.1.0+1
  isar_flutter_libs: ^3.1.0+1
  skeletonizer: ^1.0.1
  archive: ^3.4.10
  flutter_widget_from_html_core: ^0.14.11
  flutter_archive: ^6.0.3
  signature: ^5.5.0
  expandable_page_view: ^1.0.17
  flutter_svg: ^2.0.10+1
  flutter_quill: ^9.6.0
  freezed: ^2.5.7
  json_annotation: ^4.9.0
  json_serializable: ^6.8.0
  freezed_annotation: ^2.4.4

dev_dependencies:
  build_runner: ^2.4.12
  hive_generator: ^2.0.0
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^3.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:
  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
